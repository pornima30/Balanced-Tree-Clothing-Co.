-- 2. Transaction Analysis
-- Solution
-- How many unique transactions were there?
/*
SELECT COUNT(DISTINCT txn_id) AS transaction_count
FROM balanced_tree.sales;
*/
-- What is the average unique products purchased in each transaction?
/*
SELECT ROUND(AVG(total_quantity)) AS avg_unique_products
FROM (
  SELECT 
    txn_id, 
    SUM(qty) AS total_quantity
  FROM balanced_tree.sales
  GROUP BY txn_id
) AS total_quantities;
*/
-- What are the 25th, 50th and 75th percentile values for the revenue per transaction?
/*
WITH revenue_cte AS (
  SELECT 
    txn_id, 
    SUM(price * qty) AS revenue
  FROM balanced_tree.sales
  GROUP BY txn_id
)

SELECT
  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY revenue) AS median_25th,
    PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY revenue) AS median_50th,
PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY revenue) AS median_75th
FROM revenue_cte;
*/
-- What is the average discount value per transaction?
/*
SELECT ROUND(AVG(discount_amt)) AS avg_discount
FROM (
  SELECT 
	  txn_id,
    SUM(qty * price * discount/100) AS discount_amt
  FROM balanced_tree.sales
  GROUP BY txn_id
) AS discounted_value
*/
-- What is the percentage split of all transactions for members vs non-members?
/*
WITH transactions_cte AS (
  SELECT
    member,
    COUNT(DISTINCT txn_id) AS transactions
  FROM balanced_tree.sales
  GROUP BY member
)

SELECT
	member,
  transactions,
  ROUND(100 * transactions
    /(SELECT SUM(transactions) 
      FROM transactions_cte)) AS percentage
FROM transactions_cte
GROUP BY member, transactions;
*/
-- What is the average revenue for member transactions and non-member transactions?
/*
WITH revenue_cte AS (
  SELECT
    member,
  	txn_id,
    SUM(price * qty) AS revenue
  FROM balanced_tree.sales
  GROUP BY member, txn_id
)

SELECT
	member,
  ROUND(AVG(revenue),2) AS avg_revenue
FROM revenue_cte
GROUP BY member;
*/
